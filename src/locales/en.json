{
  "resume": "resume",
  "this_resume_url_is": "This resume url is",
  "info": "Info",
  "experience": "Experience",
  "introduction": "Introduction",
  "specialty": "Specialty",
  "side_project": "Side Project",
  "skill": "Skill",
  "front_end": "Front-End",
  "back_end": "Back-End",
  "service": "Service",
  "tool": "Tool",
  "record": "Record",
  "entertainment": "Entertainment",
  "bike": "MTB",
  "badminton": "Badminton",
  "reading": "Reading",
  "acg": "A.C.G(Anime, Comics, Games)",
  "keyboard": "Collect & DIY computer keyboard",
  "lego": "LEGO",
  "intro": "I enjoy web development and sharing my experiences with others. I constantly keep an eye out for new web technologies and enjoy learning about them. I am always open to new programming patterns and incorporate them into my work. Web performance and layout are my primary areas of focus. If I encounter any user experience issues with a project, I collaborate with our UX team to find solutions.",
  "s_1": "Implement file upload function",
  "s_2": "Implement Layout UI",
  "s_3": "Develop a responsive website design",
  "s_4": "Design a single page application (SPA)",
  "s_5": "Develop and implement JavaScript libary",
  "s_6": "Implement integration with app WebView",
  "s_7": "Design and plan for SEO",
  "s_8": "Quickly implement required features and provide solutions",
  "s_9": "Design function modules with high availability",
  "1_1": "Introduce Responsive Web Design to miiiCasa",
  "1_2": "Develop miiicloud Ajax File upload function",
  "1_3": "Develop Samsung Smart TV app(miiiTV)",
  "1_4": "Develop miiiTV chrome extension",
  "1_5": "Develop miiiTV Windows app(prototype)",
  "1_6": "Introduce AngularJS to miiiCasa",
  "1_7": "Introduce CSS3 transition & transform to miiiCasa",
  "1_8": "Introduce SVG to miiiCasa",
  "1_9": "Design Miii website layout structure",
  "1_10": "Develop Miii website component( material design for web / simple form validation / slider preview / notification )",
  "1_11": "Develop third party video api mix player(YouTube, Dailymotion, 优酷)",
  "1_12": "Use pure JavaScript develop Single Page and handle Facebook OG in SPA",
  "1_13": "Define git hooks for team code quality",
  "1_14": "Develop observer pattern for cross module communication",
  "2_1": "Introduce gulp to improve the development process",
  "2_2": "Use WebView to achieve Android native app adsense",
  "2_3": "Refactor and modularize adsense",
  "2_4": "Lead the front-end team",
  "2_5": "Introduce Slack to strengthen teamwork",
  "2_6": "Handle third-party API asynchronous problems",
  "2_7": "Handle iframe asynchronous and cross-frame communication using postMessage",
  "2_8": "Collaborate with the app team to handle the app-link feature",
  "2_9": "Support social media features such as Facebook or Twitter cards",
  "2_10": "Improve feebee website SEO",
  "2_11": "Use development tools like git hooks and Slack bots to improve our development flow and efficiency",
  "2_12": "Refactor feebee mobile web to improve performance and maintenance",
  "2_13": "Introduce webpack as a development tool for feebee desktop web",
  "2_14": "Develop WebView in the app to support feebee point of view",
  "2_15": "Modify the development environment for container development",
  "3_1": "Maintain official website",
  "3_2": "Build front-end development workflow",
  "3_3": "Develop PhotoGrid API using Golang",
  "3_4": "Develop and maintain PhotoGrid CMS",
  "3_5": "Build deep-linking functionality",
  "3_6": "Test website SEO using the web",
  "3_7": "Build blog using Hugo",
  "3_8": "Enhance front-end performance for data-heavy loads",
  "3_9": "Build font database for in-app font family feature and define language and text specifications",
  "3_10": "Build static web deployment workflow using Docker",
  "3_11": "Use Puppeteer to crawl social media(IG) and learn about user personas",
  "3_12": "Improve app feedback mail auto-tagging in Python using IMAP",
  "3_13": "Build app push notification CMS",
  "3_14": "Build app cloud config CMS",
  "3_15": "Build app grid photo layout configuration for app and API",
  "3_16": "Support AWS service transfer",
  "3_17": "Develop Stripe payment functionality in WebView",
  "3_18": "Improve app feedback mail auto-reply in Python using SMTP and IMAP to handle Gmail",
  "3_19": "Develop Stripe payment functionality for official website",
  "3_20": "Update & rebuild new official website",
  "4_1": "Maintain & develop chatroom service",
  "4_2": "Use Python to crawl event data from https://www.sympla.com.br/",
  "4_3": "Maintain & support https://zaptheme.com/ website and add Google Ad",
  "4_4": "Develop group service for Whatsapp groups",
  "4_5": "Develop new service Livein in webview and its share invite function",
  "4_6": "Use YouTube Player SDK to develop player in webview",
  "4_7": "Maintain & develop Livein CMS",
  "4_8": "Develop official news push management interface for Livein CMS",
  "4_9": "Support push official news & notification for different timezones",
  "4_10": "Develop & support LiveStatus app service",
  "4_11": "Fast build static LiveStatus landing page (built with open source template & deployed on firebase hosting)",
  "4_12": "Build GitHub page for policy & term of use",
  "4_13": "Support Firebase app check service for verifying api request is legal",
  "4_14": "Support app subscription (IAP) for App Store & Google Play. Note the precautions for in-app purchase and subscription"
}